apiVersion: apps/v1
kind: Deployment
metadata:
  name: nalpaca
  labels:
    {{- include "helm.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "helm.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      # serviceAccountName: {{ include "helm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "docker.io/ahewins/nalpaca:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.metrics.enabled }}
          ports:
            - name: prom-metrics
              containerPort: "8088"
              protocol: TCP
          {{- end }}
          envFrom:
            - configMapRef:
                name: app-config
            - secretRef:
                name: {{ .Values.secrets.name }}
          livenessProbe:
            grpc:
              port: 7654
          readinessProbe:
            grpc:
              port: 7654
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{ if .Values.nats.initJob.enabled }}
      initContainers:
        - name: nats-box
          image: docker.io/natsio/nats-box:latest
          command: ['sh', '-c', '/init.sh']
          volumeMounts:
            - name: initJob
              mountPath: "/"
          env:
            {{ if .Values.nats.user }}
            - name: NATS_USER
              value: {{ .Values.nats.user }}
            - name: NATS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: NATS_PASSWORD
            {{ end }}
            - name: NATS_URL
              value: {{ .Values.nats.url }}
            - name: ORDERS_ENABLED
              value: "{{ .Values.orders.enabled }}"
            - name: TRADEUPDATER_ENABLED
              value: "{{ .Values.tradeupdater.enabled }}"
            - name: CANCEL_ENABLED
              value: "{{ .Values.cancel.enabled }}"
      volumes:
        - name: initJob
          configMap:
            name: nats-init
            items:
              - key: "init.sh"
                path: "init.sh"
              {{- range $val := list "orders" "cancel" "tradeupdater" }}
              - key: "{{ $val }}-stream.json"
                path: "{{ $val }}-stream.json"
              - key: "{{ $val }}-consumer.json"
                path: "{{ $val }}-consumer.json"
              {{- end -}}
      {{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}